{"version":3,"file":"host-element.js","sourceRoot":"","sources":["../src/utils/host-element.ts"],"names":[],"mappings":"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","sourcesContent":["export function hostElement(comp: HTMLElement, config: hostElement) {\r\n  type eventsBuffer = {\r\n    eventType: string;\r\n    eventListener: string;\r\n  };\r\n\r\n  const eventsBuffer: eventsBuffer[] = [];\r\n\r\n  if (config.attributes) {\r\n    const attributes = Object.entries(config.attributes);\r\n\r\n    attributes.forEach(attr => {\r\n      // The attribute is defined\r\n      if (attr[1] || attr[1] === \"\") {\r\n        comp.setAttribute(attr[0], attr[1]);\r\n      } else {\r\n        comp.removeAttribute(attr[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  if (config.classes) {\r\n    const cssClasses = Object.entries(config.classes);\r\n\r\n    cssClasses.forEach(cssClass => {\r\n      // The class should be set\r\n      if (cssClass[1]) {\r\n        comp.classList.add(cssClass[0]);\r\n      } else {\r\n        comp.classList.remove(cssClass[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  if (config.styles) {\r\n    const styles = Object.entries(config.styles);\r\n\r\n    styles.forEach(style => {\r\n      // The style is defined\r\n      if (style[1]) {\r\n        comp.style.setProperty(style[0], style[1]);\r\n      } else {\r\n        comp.style.removeProperty(style[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  if (config.events) {\r\n    const events = Object.entries(config.events);\r\n\r\n    events.forEach(event => {\r\n      console.log(\"holaaaaaa\");\r\n      // The event is defined\r\n      if (event[1]) {\r\n        /* Save event type, and event listener (in case it doesn't exists already)\r\n        in events object in case we need to remove it, or change it later*/\r\n        const eventFound = eventsBuffer.find(\r\n          eventBuffer => eventBuffer[\"eventType\"] === event[0]\r\n        );\r\n        if (eventFound) {\r\n          /* remove previous handler*/\r\n          comp.removeEventListener(event[0], event[1]);\r\n        }\r\n        comp.addEventListener(event[0], event[1]);\r\n        eventsBuffer.push({\r\n          eventType: event[0],\r\n          eventListener: event[1].name\r\n        });\r\n        console.log(\"eventFound\", eventFound);\r\n        console.log(\"eventsBuffer\", eventsBuffer);\r\n        console.log(\"=============================\");\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport interface hostElement {\r\n  readonly attributes?: { [key: string]: string | null | undefined };\r\n  readonly classes?: { [key: string]: boolean | string | null | undefined };\r\n  readonly styles?: { [key: string]: string | null | undefined };\r\n  readonly events?: {\r\n    [key: string]:\r\n      | ((event?: Event | undefined) => void | null | undefined)\r\n      | undefined;\r\n  };\r\n}\r\n"]}